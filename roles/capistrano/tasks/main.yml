- name: Check that CONSUL exists (locally)
  hosts: 127.0.0.1
  connection: local
  stat:
    path: "{{ playbook_dir }}/consul"
  register: consul_repo

- name: Git clone CONSUL (locally)
  hosts: 127.0.0.1
  connection: local
  git:
    repo: https://github.com/consul/consul.git
    dest: "{{ playbook_dir }}/consul"
    clone: yes
    version: installer
  when: consul_repo.stat.exists == False 

- name: Copy deploy.rb (locally)
  hosts: 127.0.0.1
  connection: local
  template:
    src: "../templates/deploy.rb"
    dest: "{{ playbook_dir }}/{{ app_name }}/config/"
    owner: deploy
    group: wheel
    mode: 0774

- name: Copy deploy-secrets.yml (locally)
  hosts: 127.0.0.1
  connection: local
  template:
    src: "../templates/deploy-secrets.yml"
    dest: "{{ playbook_dir }}/{{ app_name }}/config/"
    owner: deploy
    group: wheel
    mode: 0774

- name: Copy production.rb (locally)
  hosts: 127.0.0.1
  connection: local
  template:
    src: "../templates/production.rb"
    dest: "{{ playbook_dir }}/{{ app_name }}/config/deploy/"
    owner: deploy
    group: wheel
    mode: 0774

- name: Add config/deploy/production.rb to .gitignore
  hosts: 127.0.0.1
  connection: local
  lineinfile:
    path: "{{ playbook_dir }}/consul/.gitignore"
    line: '/config/deploy'

- name: Creates shared folder
  file: 
    path: /home/{{ deploy_user }}/consul/shared
    state: directory    
    owner: deploy
    group: wheel
    mode: 0755

- name: Creates shared config folder
  file: 
    path: /home/{{ deploy_user }}/consul/shared/config
    state: directory    
    owner: deploy
    group: wheel
    mode: 0755

- name: Copy secrets configuration to shared folder
  become_user: deploy
  template:
    src: "{{ playbook_dir }}/consul/config/secrets.yml.example"
    dest: /home/{{ deploy_user }}/consul/shared/config/secrets.yml
    owner: deploy
    group: wheel

- name: Update host configuration in secrets.yml
  lineinfile:
    path: /home/{{ deploy_user }}/consul/shared/config/secrets.yml
    regexp: 'server_name'
    line: '  server_name: "{{ server_hostname }}"'

- name: Copy database configuration to shared folder
  become_user: deploy
  template:
    src: "{{ playbook_dir }}/roles/rails/templates/database.yml"
    dest: /home/deploy/consul/shared/config/database.yml
    owner: deploy
    group: wheel

- name: Copy unicorn.rb to shared folder
  become_user: deploy
  template:
    src: "{{ playbook_dir }}/roles/unicorn/templates/unicorn.rb"
    dest: /home/deploy/consul/shared/config/unicorn.rb
    owner: deploy
    group: wheel

- name: Install gems (this may take a few minutes)
  hosts: 127.0.0.1
  connection: local
  shell: gem install bundler && bundle install
  args:
    chdir: "{{ playbook_dir }}/{{ app_name }}"
    executable: /bin/bash

- name: Capistrano deploy (this may take a few minutes)
  hosts: 127.0.0.1
  connection: local
  shell: cap production deploy
  args:
    chdir: "{{ playbook_dir }}/{{ app_name }}"
    executable: /bin/bash

- name: Copy temporary config/environments/production.rb
  become_user: deploy
  template:
    src: "{{ playbook_dir }}/roles/rails/templates/production.rb"
    dest: /home/deploy/consul/current/config/environments/production.rb
    owner: deploy
    group: wheel

- name: Capistrano log permissions
  hosts: 127.0.0.1
  connection: local
  file: 
    path: "{{ playbook_dir }}/{{ app_name }}/log/capistrano.log"
    state: file
    mode: 0774

- name: Create unicorn 
  file:
    path: "/home/deploy/consul/shared/{{ item }}"
    state: directory
    owner: deploy
    group: wheel
    mode: 0775
  with_items:
    - "pids" 
    - "sockets" 
    - "log"

- name: Check that Unicorn is running
  stat:
    path: /home/deploy/consul/shared/pids/unicorn.pid
  register: unicorn_process

- name: Get running unicorn process
  shell: "cat /home/deploy/consul/shared/pids/unicorn.pid"
  register: running_process
  when: unicorn_process.stat.exists == True

- name: Kill running process
  shell: "kill -QUIT {{ item }}"
  with_items: "{{ running_process.stdout_lines }}"
  when: unicorn_process.stat.exists == True

- name: Start Unicorn
  shell: "/home/deploy/.rvm/gems/ruby-2.3.2/wrappers/unicorn -c config/unicorn.rb -E production -D"
  args:
    chdir: /home/{{ deploy_user }}/consul/current